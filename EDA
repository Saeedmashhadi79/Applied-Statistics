# Demand bids analysis:
# Supply bids are taken into account for each hour, using data coming from GME
# from 2022-01-01 to 2023-12-31 (YYYY-MM-DD) at each day and hour,
# analyzing these functions (knowing PrezzoZonale too, the intersection) without
# confrontation with Offer curves for now.
# Only the pool where all the zones are present is taken into account.

library(dplyr)
library(lubridate)
library(fda)
# Necessary to work with "month" and "day" functions

demand <- read.table('DemandBids.txt', header = TRUE)
# Remove negative data:
demand <- demand[which(demand$Prezzo > 0), ] # 20355 were negative
# We notice that negative values are used to close hours

# Working in hours, Prezzo is a function of volume; in days, months and years,
# required output is PrezzoZonale. Converting dates in a more suitable form:

demand$Anno <- year(demand$Data)
demand$Mese <- month(demand$Data)
demand$Giorno <- day(demand$Data)
demand$GiornoSettimana <- weekdays(as.Date(demand$Data))

demand$GiornoSettimana <- factor(demand$GiornoSettimana,
        levels = c("Monday", "Tuesday", "Wednesday", "Thursday", "Friday",
                    "Saturday", "Sunday"), ordered = TRUE)

# Cumulative quantity (Called Volume):
demand <- demand %>% 
  group_by(Data, Ora) %>% 
  mutate(Volume = cumsum(Quantita)) %>% 
  ungroup()

# Visualization
head(demand)
tail(demand)
dim(demand)
dimnames(demand)

demand.2022 <- demand[which(demand$Anno==2022),]
demand.2023 <- demand[which(demand$Anno==2023),]

# Preliminary EDA ---------------------------------------------------------
# Treating hours separately (and considering daily time series), we look at
# similarities within day type and month. So: hour/day/month (for two and a half
# year). We notice trends in the data.

# Boxplots ----------------------------------------------------------------

# Boxplot of PrezzoZonale in hours:
par(mfrow=c(2,1))
boxplot(demand.2022$PrezzoZonale ~ demand.2022$Ora, ylab = 'Clearing price',
        xlab = 'Hours', main = 'Clearing price by hour in 2022',
        xlim = c(0,24), col = rainbow(24))
boxplot(demand.2023$PrezzoZonale ~ demand.2023$Ora, ylab = 'Clearing price',
        xlab = 'Hours', main = 'Clearing price by hour in 2023',
        xlim = c(0,24), col = rainbow(24))

# Re-scaling them:
par(mfrow=c(2,1))
boxplot(demand.2022$PrezzoZonale ~ demand.2022$Ora, ylab = 'Clearing price',
        xlab = 'Hours', main = 'Clearing price by hour in 2022',
        xlim = c(0,24), col = rainbow(24), ylim = range(demand$PrezzoZonale))
boxplot(demand.2023$PrezzoZonale ~ demand.2023$Ora, ylab = 'Clearing price',
        xlab = 'Hours', main = 'Clearing price by hour in 2023',
        xlim = c(0,24), col = rainbow(24), ylim = range(demand$PrezzoZonale))

# Clearing price is much higher in 2022 rather than in 2023, with an higher
# variability. In both cases there's a peak in late hours and in the morning
# (more or less at nine o'clock).

# Boxplot of PrezzoZonale in months:
par(mfrow=c(2,1))
boxplot(demand.2022$PrezzoZonale ~ demand.2022$Mese, ylab = 'Clearing price',
        xlab = 'Month', main = 'Clearing price by month in 2022',
        xlim = c(0,12), col = rainbow(12))
boxplot(demand.2023$PrezzoZonale ~ demand.2023$Mese, ylab = 'Clearing price',
        xlab = 'Month', main = 'Clearing price by month in 2023',
        xlim = c(0,12), col = rainbow(12))

# Re-scaling them:
par(mfrow=c(2,1))
boxplot(demand.2022$PrezzoZonale ~ demand.2022$Mese, ylab = 'Clearing price',
        xlab = 'Month', main = 'Clearing price by month in 2022',
        xlim = c(0,12), col = rainbow(12), ylim = range(demand$PrezzoZonale))
boxplot(demand.2023$PrezzoZonale ~ demand.2023$Mese, ylab = 'Clearing price',
        xlab = 'Month', main = 'Clearing price by month in 2023',
        xlim = c(0,12), col = rainbow(12), ylim = range(demand$PrezzoZonale))

# Again, clearing price and variability are much higher in 2022 (probably due
# to external causes). In 2022 there is an anomalous peak in Summer, and a local
# peak in March. In 2023 winter months have the highest spot price.

# Boxplot of PrezzoZonale in days:
par(mfrow=c(2,1))
boxplot(demand.2022$PrezzoZonale ~ demand.2022$Giorno, ylab = 'Clearing price',
        xlab = 'Day', main = 'Clearing price by day in 2022',
        xlim = c(0,31), col = rainbow(31))
boxplot(demand.2023$PrezzoZonale ~ demand.2023$Giorno, ylab = 'Clearing price',
        xlab = 'Day', main = 'Clearing price by day in 2023',
        xlim = c(0,31), col = rainbow(31))

# Re-scaling them:
par(mfrow=c(2,1))
boxplot(demand.2022$PrezzoZonale ~ demand.2022$Giorno,
        ylab = 'Clearing price',
        xlab = 'Day', main = 'Clearing price by day in 2022',
        col = rainbow(31), ylim = range(demand$PrezzoZonale))
boxplot(demand.2023$PrezzoZonale ~ demand.2023$Giorno,
        ylab = 'Clearing price',
        xlab = 'Day', main = 'Clearing price by day in 2023',
        col = rainbow(31), ylim = range(demand$PrezzoZonale))

# Boxplot of PrezzoZonale in weekdays:
par(mfrow=c(2,1))
boxplot(demand.2022$PrezzoZonale ~ demand.2022$GiornoSettimana, ylab = 'Clearing price',
        xlab = 'WeekDay', main = 'Clearing price by weekday in 2022',
        col = rainbow(7))
boxplot(demand.2023$PrezzoZonale ~ demand.2023$GiornoSettimana, ylab = 'Clearing price',
        xlab = 'WeekDay', main = 'Clearing price by weekday in 2023',
        col = rainbow(7))

# Re-scaling them:
par(mfrow=c(2,1))
boxplot(demand.2022$PrezzoZonale ~ demand.2022$GiornoSettimana,
        ylab = 'Clearing price',
        xlab = 'Day', main = 'Clearing price by weekday in 2022',
        col = rainbow(7), ylim = range(demand$PrezzoZonale))
boxplot(demand.2023$PrezzoZonale ~ demand.2023$GiornoSettimana,
        ylab = 'Clearing price',
        xlab = 'Day', main = 'Clearing price by weekday in 2023',
        col = rainbow(7), ylim = range(demand$PrezzoZonale))

# Evaluation of statistical parameters (clearing price) ----------------

PrezzoZonale.2022_mean = mean(demand.2022$PrezzoZonale)
PrezzoZonale.2022_sd = sd(demand.2022$PrezzoZonale)
PrezzoZonale.2023_mean = mean(demand.2023$PrezzoZonale)
PrezzoZonale.2023_sd = sd(demand.2023$PrezzoZonale)

# Clearing price by months - 2022
PrezzoZonale.2022.months.mean = NULL
PrezzoZonale.2022.months.var = NULL
PrezzoZonale.2022.months.sd = NULL
for (i in 1:12){
  PrezzoZonale.2022.months.mean[i] = mean(demand.2022$PrezzoZonale
                  [which(demand.2022$Mese==i)])
  PrezzoZonale.2022.months.var[i] = var(demand.2022$PrezzoZonale
                  [which(demand.2022$Mese==i)])
  PrezzoZonale.2022.months.sd[i] = sd(demand.2022$PrezzoZonale
                  [which(demand.2022$Mese==i)])
}
# Clearing price by hours - 2022
PrezzoZonale.2022.hours.mean = NULL
PrezzoZonale.2022.hours.var = NULL
PrezzoZonale.2022.hours.sd = NULL
for (i in 1:24){
  PrezzoZonale.2022.hours.mean[i] = mean(demand.2022$PrezzoZonale
                        [which(demand.2022$Ora==i)])
  PrezzoZonale.2022.hours.var[i] = var(demand.2022$PrezzoZonale
                        [which(demand.2022$Ora==i)])
  PrezzoZonale.2022.hours.sd[i] = sd(demand.2022$PrezzoZonale
                        [which(demand.2022$Ora==i)])
}
# Clearing price by days - 2022
PrezzoZonale.2022.days.mean = NULL
PrezzoZonale.2022.days.var = NULL
PrezzoZonale.2022.days.sd = NULL
for (i in 1:31){
  PrezzoZonale.2022.days.mean[i] = mean(demand.2022$PrezzoZonale
                                          [which(demand.2022$Giorno==i)])
  PrezzoZonale.2022.days.var[i] = var(demand.2022$PrezzoZonale
                                        [which(demand.2022$Giorno==i)])
  PrezzoZonale.2022.days.sd[i] = sd(demand.2022$PrezzoZonale
                                      [which(demand.2022$Giorno==i)])
}
# Clearing price by weekdays - 2022
PrezzoZonale.2022.weekdays.mean = NULL
PrezzoZonale.2022.weekdays.var = NULL
PrezzoZonale.2022.weekdays.sd = NULL
find_weekday_position <- function(levels_vector, target_level) {
  return(match(target_level, levels_vector))
}

for (i in levels(demand$GiornoSettimana)){
  WD <- find_weekday_position(levels(demand$GiornoSettimana), i)
  PrezzoZonale.2022.weekdays.mean[WD] = mean(demand.2022$PrezzoZonale
                                        [which(demand.2022$GiornoSettimana==i)])
  PrezzoZonale.2022.weekdays.var[WD] = var(demand.2022$PrezzoZonale
                                      [which(demand.2022$GiornoSettimana==i)])
  PrezzoZonale.2022.weekdays.sd[WD] = sd(demand.2022$PrezzoZonale
                                    [which(demand.2022$GiornoSettimana==i)])
}

# Clearing price by months - 2023
PrezzoZonale.2023.months.mean = NULL
PrezzoZonale.2023.months.var = NULL
PrezzoZonale.2023.months.sd = NULL
for (i in 1:12){
  PrezzoZonale.2023.months.mean[i] = mean(demand.2023$PrezzoZonale
                                          [which(demand.2023$Mese==i)])
  PrezzoZonale.2023.months.var[i] = var(demand.2023$PrezzoZonale
                                        [which(demand.2023$Mese==i)])
  PrezzoZonale.2023.months.sd[i] = sd(demand.2023$PrezzoZonale
                                      [which(demand.2023$Mese==i)])
}
# Clearing price by hours - 2023
PrezzoZonale.2023.hours.mean = NULL
PrezzoZonale.2023.hours.var = NULL
PrezzoZonale.2023.hours.sd = NULL
for (i in 1:24){
  PrezzoZonale.2023.hours.mean[i] = mean(demand.2023$PrezzoZonale
                                         [which(demand.2023$Ora==i)])
  PrezzoZonale.2023.hours.var[i] = var(demand.2023$PrezzoZonale
                                       [which(demand.2023$Ora==i)])
  PrezzoZonale.2023.hours.sd[i] = sd(demand.2023$PrezzoZonale
                                     [which(demand.2023$Ora==i)])
}
# Clearing price by days - 2023
PrezzoZonale.2023.days.mean = NULL
PrezzoZonale.2023.days.var = NULL
PrezzoZonale.2023.days.sd = NULL
for (i in 1:31){
  PrezzoZonale.2023.days.mean[i] = mean(demand.2023$PrezzoZonale
                                        [which(demand.2023$Giorno==i)])
  PrezzoZonale.2023.days.var[i] = var(demand.2023$PrezzoZonale
                                      [which(demand.2023$Giorno==i)])
  PrezzoZonale.2023.days.sd[i] = sd(demand.2023$PrezzoZonale
                                    [which(demand.2023$Giorno==i)])
}
# Clearing price by weekdays - 2023
PrezzoZonale.2023.weekdays.mean = NULL
PrezzoZonale.2023.weekdays.var = NULL
PrezzoZonale.2023.weekdays.sd = NULL
find_weekday_position <- function(levels_vector, target_level) {
  return(match(target_level, levels_vector))
}

for (i in levels(demand$GiornoSettimana)){
  WD <- find_weekday_position(levels(demand$GiornoSettimana), i)
  PrezzoZonale.2023.weekdays.mean[WD] = mean(demand.2023$PrezzoZonale
                                             [which(demand.2023$GiornoSettimana==i)])
  PrezzoZonale.2023.weekdays.var[WD] = var(demand.2023$PrezzoZonale
                                           [which(demand.2023$GiornoSettimana==i)])
  PrezzoZonale.2023.weekdays.sd[WD] = sd(demand.2023$PrezzoZonale
                                         [which(demand.2023$GiornoSettimana==i)])
}


# Scatter plots -----------------------------------------------------------

# A) Means (months):
month_mean <- function(){
par(mfrow = c(1,2))
plot(PrezzoZonale.2022.months.mean, pch = 16, xlab = 'Months in 2022',
     ylab = 'Mean clearing price', col = 'blue',
     ylim = c(0,600))
abline(h = PrezzoZonale.2022_mean, lty = 2, lwd = 2)
plot(PrezzoZonale.2023.months.mean, pch = 16, xlab = 'Months in 2023',
     ylab = 'Mean clearing price', col = 'red',
     ylim = c(0,600))
abline(h = PrezzoZonale.2023_mean, lty = 2, lwd = 2)
}
month_mean()
#

# B) Means (hours):
hours_mean <- function(){
par(mfrow = c(1,2))
plot(PrezzoZonale.2022.hours.mean, pch = 16, xlab = 'Hours in 2022',
     ylab = 'Mean clearing price', col = 'blue',
     ylim = c(0,400))
abline(h = PrezzoZonale.2022_mean, lty = 2, lwd = 2)
plot(PrezzoZonale.2023.hours.mean, pch = 16, xlab = 'Hours in 2023',
     ylab = 'Mean clearing price', col = 'red',
     ylim = c(0,400))
abline(h = PrezzoZonale.2023_mean, lty = 2, lwd = 2)
}
hours_mean()

# C) Means (days):
day_mean <- function(){
  par(mfrow = c(1,2))
  plot(PrezzoZonale.2022.days.mean, pch = 16, xlab = 'Days in 2022',
       ylab = 'Mean clearing price', col = 'blue',
       ylim = c(0,600))
  abline(h = PrezzoZonale.2022_mean, lty = 2, lwd = 2)
  plot(PrezzoZonale.2023.days.mean, pch = 16, xlab = 'Days in 2023',
       ylab = 'Mean clearing price', col = 'red',
       ylim = c(0,600))
  abline(h = PrezzoZonale.2023_mean, lty = 2, lwd = 2)
}
day_mean()
#

# D) Means (weekdays):
weekday_mean <- function(){
  par(mfrow = c(1,2))
  plot(PrezzoZonale.2022.weekdays.mean, pch = 16, xlab = 'Weekdays in 2022',
       ylab = 'Mean clearing price', col = 'blue',
       ylim = c(0,400))
  abline(h = PrezzoZonale.2022_mean, lty = 2, lwd = 2)
  plot(PrezzoZonale.2023.weekdays.mean, pch = 16, xlab = 'Weekdays in 2023',
       ylab = 'Mean clearing price', col = 'red',
       ylim = c(0,400))
  abline(h = PrezzoZonale.2023_mean, lty = 2, lwd = 2)
}
weekday_mean()

# E) Standard deviation (months):
month_sd <- function(){
par(mfrow = c(1,2))
plot(PrezzoZonale.2022.months.sd, pch = 16, xlab = 'Months in 2022',
     ylab = 'Clearing price standard deviation', col = 'blue',
     ylim = c(10, 100))
abline(h = mean(PrezzoZonale.2022.months.sd), lty = 2, lwd = 2)
plot(PrezzoZonale.2023.months.sd, pch = 16, xlab = 'Months in 2023',
     ylab = 'Clearing price standard deviation', col = 'red',
     ylim = c(10, 100))
abline(h = mean(PrezzoZonale.2023.months.sd), lty = 2, lwd = 2)
}
month_sd()
# We don't compare here with total variability because it doesn't make sense,
# only with the mean of all the standard deviations

# F) Standard deviation (hours):
hours_sd = function(){
par(mfrow = c(1,2))
plot(PrezzoZonale.2022.hours.sd, pch = 16, xlab = 'Hours in 2022',
     ylab = 'Clearing price standard deviation', col = 'blue',
     ylim = c(10, 160))
abline(h = mean(PrezzoZonale.2022.hours.sd), lty = 2, lwd = 2)
plot(PrezzoZonale.2023.hours.sd, pch = 16, xlab = 'Hours in 2023',
     ylab = 'Clearing price standard deviation', col = 'red',
     ylim = c(10, 160))
abline(h = mean(PrezzoZonale.2023.hours.sd), lty = 2, lwd = 2)
}
hours_sd()

# G) sds (days):
day_sd <- function(){
  par(mfrow = c(1,2))
  plot(PrezzoZonale.2022.days.sd, pch = 16, xlab = 'Days in 2022',
       ylab = 'sd clearing price', col = 'blue',
       ylim = c(0,600))
  abline(h = PrezzoZonale.2022_sd, lty = 2, lwd = 2)
  plot(PrezzoZonale.2023.days.sd, pch = 16, xlab = 'Days in 2023',
       ylab = 'sd clearing price', col = 'red',
       ylim = c(0,600))
  abline(h = PrezzoZonale.2023_sd, lty = 2, lwd = 2)
}
day_sd()
#

# H) sds (weekdays):
weekday_sd <- function(){
  par(mfrow = c(1,2))
  plot(PrezzoZonale.2022.weekdays.sd, pch = 16, xlab = 'Weekdays in 2022',
       ylab = 'sd clearing price', col = 'blue',
       ylim = c(0,400))
  abline(h = PrezzoZonale.2022_sd, lty = 2, lwd = 2)
  plot(PrezzoZonale.2023.weekdays.sd, pch = 16, xlab = 'Weekdays in 2023',
       ylab = 'sd clearing price', col = 'red',
       ylim = c(0,400))
  abline(h = PrezzoZonale.2023_sd, lty = 2, lwd = 2)
}
weekday_sd()


# Matplots: ---------------------------------------------------------------
PrezzoZonale.2022.OraMese <- matrix(rep(0, 24*12), 24, 12)
for (i in 1:12){
  for (j in 1:24){
    PrezzoZonale.2022.OraMese[j, i] <-
      mean(demand.2022$PrezzoZonale[which(demand.2022$Ora==j&demand.2022$Mese==i)])
  }
}
matplot(t(PrezzoZonale.2022.OraMese), type = 'l', ylab = 'Clearing price',
xlab = 'Months', main = 'Clearing price by hour in 2022')

PrezzoZonale.2022.GiornoMese <- matrix(rep(0, 28*12), 28, 12)
for (i in 1:12){
  for (j in 1:28){
    PrezzoZonale.2022.GiornoMese[j, i] <-
      mean(demand.2022$PrezzoZonale[which(demand.2022$Giorno==j&demand.2022$Mese==i)])
  }
}
matplot(t(PrezzoZonale.2022.GiornoMese), type = 'l', ylab = 'Clearing price',
        xlab = 'Months', main = 'Clearing price by day in 2022')








